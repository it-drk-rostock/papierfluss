model Form {
    id          String   @id @default(uuid())
    title       String
    description String?
    icon        String?
    schema      Json?
    isPublic    Boolean  @default(false)
    isActive    Boolean  @default(true)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    // Relations
    createdBy   User?            @relation("FormCreator", fields: [createdById], references: [id])
    createdById String?
    teams       Team[]
    submissions FormSubmission[]

    @@index([createdById])
}

model FormSubmission {
    id            String           @id @default(uuid())
    data          Json?
    status        SubmissionStatus @default(open)
    reviewNotes   String?
    createdAt     DateTime         @default(now())
    updatedAt     DateTime         @updatedAt
    form          Form             @relation(fields: [formId], references: [id])
    formId        String
    submittedBy   User?            @relation(fields: [submittedById], references: [id])
    submittedById String?

    @@index([formId])
    @@index([submittedById])
}

enum SubmissionStatus {
    open // Initial state, no data entered yet
    ongoing // User has saved some data at least once
    submitted // User has submitted for review
    rejected // Reviewer rejected, set back to ongoing for revisions
    completed // Reviewer approved (same as approved/completed)
}
